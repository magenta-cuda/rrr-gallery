{"version":3,"sources":["jquery.justifiedGallery.js"],"names":["$","fn","justifiedGallery","arg","defaults","sizeRangeSuffixes","lt100","lt240","lt320","lt500","lt640","lt1024","rowHeight","maxRowHeight","margins","lastRow","justifyThreshold","cssAnimation","captionsAnimationDuration","captionsVisibleOpacity","imagesAnimationDuration","fixedHeight","captions","rel","target","extension","refreshTime","randomize","onEntryMouseEnterForCaption","ev","$caption","currentTarget","find","data","settings","addClass","removeClass","stop","fadeTo","onEntryMouseLeaveForCaption","displayEntry","$entry","x","y","imgWidth","imgHeight","context","$image","css","width","height","captionMouseEvents","$imgCaption","length","caption","attr","append","mouseenter","mouseleave","on","undefined","off","removeData","rewind","lastAnalyzedIndex","buildingRow","entriesBuff","offY","firstRowFlushed","flushRow","isLastRow","minHeight","offX","i","stdImgW","newImgW","newImgH","justify","availableWidth","galleryWidth","extraW","Math","ceil","prepareBuildingRow","$gallery","spinner","active","$el","innerHeight","trigger","stopImgAnalyzerStarter","yield","flushed","imgAnalyzerTimeout","clearTimeout","startImgAnalyzer","isForResize","setTimeout","analyzeImages","entries","every","push","detach","spinnerContext","clearInterval","intervalId","stopLoadingSpinnerAnimation","this","each","index","gallery","$spinner","extend","phase","timeslot","$points","checkWidthIntervalId","checkSuffixesRange","range","checkOrConvertNumber","setting","parseFloat","isNaN","checkSettings","toArray","sort","random","appendTo","usedSizeRangeRegExp","RegExp","imagesToLoad","entry","setInterval","eq","startLoadingSpinnerAnimation","imageSrc","loadImg","Image","$loadImg","one","src","parseInt","checkWidth","jQuery"],"mappings":"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","file":"jquery.justifiedGallery.js","sourcesContent":["/*!\n * Justified Gallery - v3.2.0\n * http://miromannino.com/projects/justified-gallery/\n * Copyright (c) 2014 Miro Mannino\n * Licensed under the MIT license.\n */\n(function($) {\n\n\t/* Events\n\t\tjg.complete : called when all the gallery has been created\n\t\tjg.resize : called when the gallery has been resized\n\t*/\n\n\t$.fn.justifiedGallery = function (arg) {\n\n\t\t// Default options\n\t\tvar defaults = {\n\t\t\tsizeRangeSuffixes : {\n\t\t\t\t'lt100': '_t', \n\t\t\t\t'lt240': '_m', \n\t\t\t\t'lt320': '_n', \n\t\t\t\t'lt500': '', \n\t\t\t\t'lt640': '_z', \n\t\t\t\t'lt1024': '_b'\n\t\t\t},\n\t\t\trowHeight : 120,\n\t\t\tmaxRowHeight : 0, //negative value = no limits, 0 = 1.5 * rowHeight\n\t\t\tmargins : 1,\n\t\t\tlastRow : 'nojustify', // or can be 'justify' or 'hide'\n\t\t\tjustifyThreshold: 0.35, // if available space / row width <= 0.35 it will be always justified \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// (lastRow setting is not considered)\n\t\t\tcssAnimation: false,\n\t\t\tcaptionsAnimationDuration : 500,\n\t\t\tcaptionsVisibleOpacity : 0.7, \n\t\t\timagesAnimationDuration : 300,\n\t\t\tfixedHeight : false,\n\t\t\tcaptions : true,\n\t\t\trel : null, //rewrite the rel of each analyzed links\n\t\t\ttarget : null, //rewrite the target of all links\n\t\t\textension : /\\.[^.]+$/,\n\t\t\trefreshTime : 250,\n\t\t\trandomize : false\n\t\t};\n\n\t\tfunction getSuffix(width, height, context) {\n\t\t\tvar longestSide;\n\t\t\tlongestSide = (width > height) ? width : height;\n\t\t\tif (longestSide <= 100) {\n\t\t\t\treturn context.settings.sizeRangeSuffixes.lt100;\n\t\t\t} else if (longestSide <= 240) {\n\t\t\t\treturn context.settings.sizeRangeSuffixes.lt240;\n\t\t\t} else if (longestSide <= 320) {\n\t\t\t\treturn context.settings.sizeRangeSuffixes.lt320;\n\t\t\t} else if (longestSide <= 500) {\n\t\t\t\treturn context.settings.sizeRangeSuffixes.lt500;\n\t\t\t} else if (longestSide <= 640) {\n\t\t\t\treturn context.settings.sizeRangeSuffixes.lt640;\n\t\t\t} else {\n\t\t\t\treturn context.settings.sizeRangeSuffixes.lt1024;\n\t\t\t}\n\t\t}\n\n\t\tfunction onEntryMouseEnterForCaption (ev) {\n\t\t\tvar $caption = $(ev.currentTarget).find('.caption');\n\t\t\tif (ev.data.settings.cssAnimation) {\n\t\t\t\t$caption.addClass('caption-visible').removeClass('caption-hidden');\n\t\t\t} else {\n\t\t\t\t$caption.stop().fadeTo(ev.data.settings.captionsAnimationDuration, ev.data.settings.captionsVisibleOpacity);\n\t\t\t}\n\t\t}\n\n\t\tfunction onEntryMouseLeaveForCaption (ev) {\n\t\t\tvar $caption = $(ev.currentTarget).find('.caption');\n\t\t\tif (ev.data.settings.cssAnimation) {\n\t\t\t\t$caption.removeClass('caption-visible').removeClass('caption-hidden');\n\t\t\t} else {\n\t\t\t\t$caption.stop().fadeTo(ev.data.settings.captionsAnimationDuration, 0.0);\n\t\t\t}\n\t\t}\n\n\t\tfunction displayEntry($entry, x, y, imgWidth, imgHeight, rowHeight, context) {\n\t\t\tvar $image = $entry.find('img');\n\t\t\t$image.css('width', imgWidth);\n\t\t\t$image.css('height', imgHeight);\n\t\t\t$image.css('margin-left', - imgWidth / 2);\n\t\t\t$image.css('margin-top', - imgHeight / 2);\n\t\t\t$entry.width(imgWidth);\n\t\t\t$entry.height(rowHeight);\n\t\t\t$entry.css('top', y);\n\t\t\t$entry.css('left', x);\n\n\t\t\t//DEBUG// console.log('displayEntry: $image.width() = ' + $image.width() + ' $image.height() = ' + $image.height());\n/*\n * Image reloading for an high quality of thumbnails not supported\n\t\t\t// Image reloading for an high quality of thumbnails\n\t\t\tvar imageSrc = $image.attr('src');\n\t\t\tvar newImageSrc = imageSrc.replace(context.settings.extension, '').replace(context.usedSizeRangeRegExp, '') + \n\t\t\t\t\t\t\t\tgetSuffix(imgWidth, imgHeight, context) + \n\t\t\t\t\t\t\t\timageSrc.match(context.settings.extension)[0];\n\n\t\t\t$image.one('error', function () {\n\t\t\t\t//DEBUG// console.log('revert the original image');\n\t\t\t\t$image.attr('src', $image.data('jg.originalSrc')); //revert to the original thumbnail, we got it.\n\t\t\t});\n\n\t\t\tvar loadNewImage = function () {\n\t\t\t\tif (imageSrc !== newImageSrc) { //load the new image after the fadeIn\n\t\t\t\t\t$image.attr('src', newImageSrc);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (context.settings.cssAnimation) {\n\t\t\t\t$entry.addClass('entry-visible');\n\t\t\t\tloadNewImage();\n\t\t\t} else {\n\t\t\t\t$entry.stop().fadeTo(context.settings.imagesAnimationDuration, 1.0, loadNewImage);\n\t\t\t}\n * Image reloading for an high quality of thumbnails not supported\n */\n\n      $entry.addClass('entry-visible');   // necessary since image reloading not done\n \n\t\t\t// Captions ------------------------------\n\t\t\t//TODO option for caption always visible\n\t\t\tvar captionMouseEvents = $entry.data('jg.captionMouseEvents');\n\t\t\tif (context.settings.captions === true) {\n\t\t\t\tvar $imgCaption = $entry.find('.caption');\n\t\t\t\tif ($imgCaption.length === 0) { // Create it if it doesn't exists\n\t\t\t\t\tvar caption = $image.attr('alt');\n\t\t\t\t\tif (typeof caption === 'undefined') caption = $entry.attr('title');\n\t\t\t\t\tif (typeof caption !== 'undefined') { // Create only we found something\n\t\t\t\t\t\t$imgCaption = $('<div class=\"caption\">' + caption + '</div>');\n\t\t\t\t\t\t$entry.append($imgCaption);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\t// Create events (we check again the $imgCaption because it can be still inexistent)\n\t\t\t\tif ($imgCaption.length !== 0 && typeof captionMouseEvents === 'undefined') { \n\t\t\t\t\tcaptionMouseEvents = {\n\t\t\t\t\t\tmouseenter: onEntryMouseEnterForCaption,\n\t\t\t\t\t\tmouseleave: onEntryMouseLeaveForCaption\n\t\t\t\t\t};\n\t\t\t\t\t$entry.on('mouseenter', undefined, context, captionMouseEvents.mouseenter);\n\t\t\t\t\t$entry.on('mouseleave', undefined, context, captionMouseEvents.mouseleave);\n\t\t\t\t\t$entry.data('jg.captionMouseEvents', captionMouseEvents);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (typeof captionMouseEvents !== 'undefined') {\n\t\t\t\t\t$entry.off('mouseenter', undefined, context, captionMouseEvents.mouseenter);\n\t\t\t\t\t$entry.off('mouseleave', undefined, context, captionMouseEvents.mouseleave);\n\t\t\t\t\t$entry.removeData('jg.captionMouseEvents');\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tfunction prepareBuildingRow(context, isLastRow) {\n\t\t\tvar i, $entry, $image, stdImgW, newImgW, newImgH, justify = true;\n\t\t\tvar minHeight = 0;\n\t\t\tvar availableWidth = context.galleryWidth;\n\t\t\tvar extraW = availableWidth - context.buildingRow.width - \n\t\t\t\t\t\t\t((context.buildingRow.entriesBuff.length - 1) * context.settings.margins);\n\n\t\t\t//Skip the last row if we can't justify it and the lastRow == 'hide'\n\t\t\tif (isLastRow && context.settings.lastRow === 'hide' && (extraW / availableWidth > context.settings.justifyThreshold)) {\n\t\t\t\tfor (i = 0; i < context.buildingRow.entriesBuff.length; i++) {\n\t\t\t\t\t$entry = context.buildingRow.entriesBuff[i];\n\t\t\t\t\tif (context.settings.cssAnimation) \n\t\t\t\t\t\t$entry.removeClass('entry-visible');\t\t\t\t\t\t\n\t\t\t\t\telse\n\t\t\t\t\t\t$entry.stop().fadeTo(0, 0);\n\t\t\t\t}\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// With lastRow = nojustify, justify if (extraW / availableWidth <= context.settings.justifyThreshold)\n\t\t\tif (isLastRow && context.settings.lastRow === 'nojustify' && (extraW / availableWidth > context.settings.justifyThreshold)) \n\t\t\t\tjustify = false;\n\n\t\t\t//DEBUG// console.log('prepareBuildingRow: availableWidth: ' + availableWidth + ' extraW: ' + extraW);\n\n\t\t\tfor (i = 0; i < context.buildingRow.entriesBuff.length; i++) {\n\t\t\t\t$image = context.buildingRow.entriesBuff[i].find('img');\n\t\t\t\tstdImgW = Math.ceil($image.data('jg.imgw') / ($image.data('jg.imgh') / context.settings.rowHeight));\n\n\t\t\t\tif (justify) {\n\t\t\t\t\tif (i < context.buildingRow.entriesBuff.length - 1) {\n\t\t\t\t\t\t// Scale proportionally of the image aspect ratio (the more is long, the more can be extended)\n\t\t\t\t\t\tnewImgW = stdImgW + Math.ceil(stdImgW / context.buildingRow.width * extraW);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewImgW = availableWidth;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Scale factor for the new width is (newImgW / stdImgW), hence:\n\t\t\t\t\tnewImgH = Math.ceil(context.settings.rowHeight * (newImgW / stdImgW));\n\n\t\t\t\t\t// With fixedHeight the newImgH >= rowHeight. In some cases here this is not satisfied (due to the justification)\n\t\t\t\t\tif (context.settings.fixedHeight && newImgH < context.settings.rowHeight) {\n\t\t\t\t\t\tnewImgW = stdImgW;\n\t\t\t\t\t\tnewImgH = context.settings.rowHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnewImgW = stdImgW;\n\t\t\t\t\tnewImgH = context.settings.rowHeight;\n\t\t\t\t}\n\n\t\t\t\t$image.data('jg.imgw', newImgW);\n\t\t\t\t$image.data('jg.imgh', newImgH);\n\n\t\t\t\t//DEBUG// console.log($image.attr('alt') + ' new jq.imgw = ' + $image.data('jg.imgw') + ' new jg.imgh = ' + $image.data('jg.imgh'));\n\t\t\t\t\n\t\t\t\tavailableWidth -= newImgW + ((i < context.buildingRow.entriesBuff.length - 1) ? context.settings.margins : 0);\n\t\t\t\tif (i === 0 || minHeight > newImgH) minHeight = newImgH;\n\t\t\t}\n\n\t\t\t//DEBUG// console.log('availableWidth: ' + availableWidth + ' extraW: ' + extraW);\n\n\t\t\tif (context.settings.fixedHeight) minHeight = context.settings.rowHeight;\n\t\t\treturn minHeight;\n\t\t}\n\n\t\tfunction rewind(context) {\n\t\t\tcontext.lastAnalyzedIndex = -1;\n\t\t\tcontext.buildingRow.entriesBuff = [];\n\t\t\tcontext.buildingRow.width = 0;\n\t\t\tcontext.offY = 0;\n\t\t\tcontext.firstRowFlushed = false;\n\t\t}\n\n\t\tfunction flushRow(context, isLastRow) {\n\t\t\tvar $entry, $image, minHeight, offX = 0;\n\n\t\t\t//DEBUG// console.log('flush (width: ' + context.buildingRow.width + ', galleryWidth: ' + context.galleryWidth + ', ' + 'isLastRow: ' + isLastRow + ')');\n\n\t\t\tminHeight = prepareBuildingRow(context, isLastRow);\n\t\t\tif (isLastRow && context.settings.lastRow === 'hide' && minHeight === -1) {\n\t\t\t\tcontext.buildingRow.entriesBuff = [];\n\t\t\t\tcontext.buildingRow.width = 0;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (context.settings.maxRowHeight > 0 && context.settings.maxRowHeight < minHeight)\n\t\t\t\tminHeight = context.settings.maxRowHeight;\n\t\t\telse if (context.settings.maxRowHeight === 0 && (1.5 * context.settings.rowHeight) < minHeight)\n\t\t\t\tminHeight = 1.5 * context.settings.rowHeight;\n\n\t\t\tfor (var i = 0; i < context.buildingRow.entriesBuff.length; i++) {\n\t\t\t\t$entry = context.buildingRow.entriesBuff[i];\n\t\t\t\t$image = $entry.find('img');\n\t\t\t\tdisplayEntry($entry, offX, context.offY, $image.data('jg.imgw'), $image.data('jg.imgh'), minHeight, context);\n\t\t\t\toffX += $image.data('jg.imgw') + context.settings.margins;\n\t\t\t}\n\n\t\t\t//Gallery Height\n\t\t\tcontext.$gallery.height(context.offY + minHeight +\n\t\t\t\t(context.spinner.active ? context.spinner.$el.innerHeight() : 0)\n\t\t\t);\n\n\t\t\tif(!isLastRow) {\n\t\t\t\t//Ready for a new row\n\t\t\t\tcontext.offY += minHeight + context.settings.margins;\n\n\t\t\t\t//DEBUG// console.log('minHeight: ' + minHeight + ' offY: ' + context.offY);\n\n\t\t\t\tcontext.buildingRow.entriesBuff = []; //clear the array creating a new one\n\t\t\t\tcontext.buildingRow.width = 0;\n\t\t\t\tcontext.firstRowFlushed = true;\n\t\t\t\tcontext.$gallery.trigger('jg.rowflush');\n\t\t\t}\n\t\t}\n\n\t\tfunction checkWidth(context) {\n\t\t\tcontext.checkWidthIntervalId = setInterval(function () {\n\t\t\t\tvar galleryWidth = parseInt(context.$gallery.width(), 10);\n\t\t\t\tif (context.galleryWidth !== galleryWidth) {\n\t\t\t\t\t//DEBUG// console.log(\"resize. old: \" + context.galleryWidth + \" new: \" + galleryWidth);\n\t\t\t\t\t\n\t\t\t\t\tcontext.galleryWidth = galleryWidth;\n\t\t\t\t\trewind(context);\n\n\t\t\t\t\t// Restart to analyze\n\t\t\t\t\tstartImgAnalyzer(context, true);\n\t\t\t\t}\n\t\t\t}, context.settings.refreshTime);\n\t\t}\t\n\n\t\tfunction startLoadingSpinnerAnimation(spinnerContext) {\n\t\t\tclearInterval(spinnerContext.intervalId);\n\t\t\tspinnerContext.intervalId = setInterval(function () {\n\t\t\t\tif (spinnerContext.phase < spinnerContext.$points.length) \n\t\t\t\t\tspinnerContext.$points.eq(spinnerContext.phase).fadeTo(spinnerContext.timeslot, 1);\n\t\t\t\telse\n\t\t\t\t\tspinnerContext.$points.eq(spinnerContext.phase - spinnerContext.$points.length).fadeTo(spinnerContext.timeslot, 0);\n\t\t\t\tspinnerContext.phase = (spinnerContext.phase + 1) % (spinnerContext.$points.length * 2);\n\t\t\t}, spinnerContext.timeslot);\n\t\t}\n\n\t\tfunction stopLoadingSpinnerAnimation(spinnerContext) {\n\t\t\tclearInterval(spinnerContext.intervalId);\n\t\t\tspinnerContext.intervalId = null;\n\t\t}\n\n\t\tfunction stopImgAnalyzerStarter(context) {\n\t\t\tcontext.yield.flushed = 0;\n\t\t\tif (context.imgAnalyzerTimeout !== null) clearTimeout(context.imgAnalyzerTimeout);\n\t\t}\n\n\t\tfunction startImgAnalyzer(context, isForResize) {\n\t\t\tstopImgAnalyzerStarter(context);\n\t\t\tcontext.imgAnalyzerTimeout = setTimeout(function () { analyzeImages(context, isForResize); }, 0.001);\n\t\t\tanalyzeImages(context, isForResize);\n\t\t}\n\n\t\tfunction analyzeImages(context, isForResize) {\n\t\t\t\n\t\t\t//DEBUG// \n\t\t\t/*var rnd = parseInt(Math.random() * 10000, 10);\n\t\t\t//DEBUG// console.log('analyzeImages ' + rnd + ' start');\n\t\t\t//DEBUG// console.log('images status: ');\n\t\t\tfor (var i = 0; i < context.entries.length; i++) {\n\t\t\t\tvar $entry = $(context.entries[i]);\n\t\t\t\tvar $image = $entry.find('img');\n\t\t\t\t//DEBUG// console.log(i + ' (alt: ' + $image.attr('alt') + 'loaded: ' + $image.data('jg.loaded') + ')');\n\t\t\t}*/\n\n\t\t\t/* The first row */\n\t\t\tvar isLastRow;\n\t\t\t\n\t\t\tfor (var i = context.lastAnalyzedIndex + 1; i < context.entries.length; i++) {\n\t\t\t\tvar $entry = $(context.entries[i]);\n\t\t\t\tvar $image = $entry.find('img');\n\n\t\t\t\t//DEBUG// console.log('checking: ' + i + ' (loaded: ' + $image.data('jg.loaded') + ')');\n\n\t\t\t\tif ($image.data('jg.loaded') === true) {\n\t\t\t\t\tvar newImgW = Math.ceil($image.data('jg.imgw') / ($image.data('jg.imgh') / context.settings.rowHeight));\n\n\t\t\t\t\t//DEBUG// console.log('analyzed img ' + $image.attr('alt') + ', imgW: ' + $image.data('jg.imgw') + ', imgH: ' + $image.data('jg.imgh') + ', rowWidth: ' + context.buildingRow.width);\n\n\t\t\t\t\tisLastRow = context.firstRowFlushed && (i >= context.entries.length - 1);\n\n\t\t\t\t\t// NOTE: If we have fixed height we need to never have a negative extraW, else some images can be hided.\n\t\t\t\t\t//\t\t\t\tThis is because the images need to have a smaller height, but fixed height doesn't allow it\n\t\t\t\t\tif (context.buildingRow.width + (context.settings.fixedHeight ? newImgW : newImgW / 2) + \n\t\t\t\t\t\t\t\t(context.buildingRow.entriesBuff.length - 1) * \n\t\t\t\t\t\t\t\tcontext.settings.margins > context.galleryWidth) {\n\n\t\t\t\t\t\tflushRow(context, isLastRow);\n\n\t\t\t\t\t\tif(++context.yield.flushed >= context.yield.every) {\n\t\t\t\t\t\t\t//DEBUG// console.log(\"yield\");\n\t\t\t\t\t\t\tstartImgAnalyzer(context, isForResize);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.buildingRow.entriesBuff.push($entry);\n\t\t\t\t\tcontext.buildingRow.width += newImgW;\n\t\t\t\t\tcontext.lastAnalyzedIndex = i;\n\n\t\t\t\t} else if ($image.data('jg.loaded') !== 'error') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Last row flush (the row is not full)\n\t\t\tif (context.buildingRow.entriesBuff.length > 0) flushRow(context, context.firstRowFlushed);\n\n\t\t\tif (context.spinner.active) {\n\t\t\t\tcontext.spinner.active = false;\n\t\t\t\tcontext.$gallery.height(context.$gallery.height() - context.spinner.$el.innerHeight());\n\t\t\t\tcontext.spinner.$el.detach();\n\t\t\t\tstopLoadingSpinnerAnimation(context.spinner);\n\t\t\t}\n\n\t\t\t/* Stop, if there is, the timeout to start the analyzeImages.\n\t\t\t\t\tThis is because an image can be set loaded, and the timeout can be set,\n\t\t\t\t\tbut this image can be analyzed yet. \n\t\t\t*/\n\t\t\tstopImgAnalyzerStarter(context);\n\n\t\t\t//On complete callback\n\t\t\tif (!isForResize) context.$gallery.trigger('jg.complete'); else context.$gallery.trigger('jg.resize');\n\n\t\t\t//DEBUG// console.log('analyzeImages ' + rnd +  ' end');\n\t\t}\n\n\t\tfunction checkSettings (context) {\n\n\t\t\tfunction checkSuffixesRange(range) {\n\t\t\t\tif (typeof context.settings.sizeRangeSuffixes[range] !== 'string')\n\t\t\t\t\tthrow 'sizeRangeSuffixes.' + range + ' must be a string';\n\t\t\t}\n\n\t\t\tfunction checkOrConvertNumber(setting) {\n\t\t\t\tif (typeof context.settings[setting] === 'string') {\n\t\t\t\t\tcontext.settings[setting] = parseFloat(context.settings[setting], 10);\n\t\t\t\t\tif (isNaN(context.settings[setting])) throw 'invalid number for ' + setting;\n\t\t\t\t} else if (typeof context.settings[setting] === 'number') {\n\t\t\t\t\tif (isNaN(context.settings[setting])) throw 'invalid number for ' + setting;\n\t\t\t\t} else {\n\t\t\t\t\tthrow setting + ' must be a number';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof context.settings.sizeRangeSuffixes !== 'object')\n\t\t\t\tthrow 'sizeRangeSuffixes must be defined and must be an object';\n\n\t\t\tcheckSuffixesRange('lt100');\n\t\t\tcheckSuffixesRange('lt240');\n\t\t\tcheckSuffixesRange('lt320');\n\t\t\tcheckSuffixesRange('lt500');\n\t\t\tcheckSuffixesRange('lt640');\n\t\t\tcheckSuffixesRange('lt1024');\n\n\t\t\tcheckOrConvertNumber('rowHeight');\n\t\t\tcheckOrConvertNumber('maxRowHeight');\n\t\t\tcheckOrConvertNumber('margins');\n\n\t\t\tif (context.settings.lastRow !== 'nojustify' &&\n\t\t\t\t\tcontext.settings.lastRow !== 'justify' &&\n\t\t\t\t\tcontext.settings.lastRow !== 'hide') {\n\t\t\t\tthrow 'lastRow must be \"nojustify\", \"justify\" or \"hide\"';\n\t\t\t}\n\n\t\t\tcheckOrConvertNumber('justifyThreshold');\n\t\t\tif (context.settings.justifyThreshold < 0 || context.settings.justifyThreshold > 1)\n\t\t\t\tthrow 'justifyThreshold must be in the interval [0,1]';\n\t\t\tif (typeof context.settings.cssAnimation !== 'boolean') {\n\t\t\t\tthrow 'cssAnimation must be a boolean';\t\n\t\t\t}\n\t\t\t\n\t\t\tcheckOrConvertNumber('captionsAnimationDuration');\n\t\t\tcheckOrConvertNumber('imagesAnimationDuration');\n\n\t\t\tcheckOrConvertNumber('captionsVisibleOpacity');\n\t\t\tif (context.settings.captionsVisibleOpacity < 0 || context.settings.captionsVisibleOpacity > 1)\n\t\t\t\tthrow 'captionsVisibleOpacity must be in the interval [0,1]';\n\n\t\t\tif (typeof context.settings.fixedHeight !== 'boolean') {\n\t\t\t\tthrow 'fixedHeight must be a boolean';\t\n\t\t\t}\n\n\t\t\tif (typeof context.settings.captions !== 'boolean') {\n\t\t\t\tthrow 'captions must be a boolean';\t\n\t\t\t}\n\n\t\t\tcheckOrConvertNumber('refreshTime');\n\n\t\t\tif (typeof context.settings.randomize !== 'boolean') {\n\t\t\t\tthrow 'randomize must be a boolean';\t\n\t\t\t}\n\n\t\t}\n\n\t\treturn this.each(function (index, gallery) {\n\n\t\t\tvar $gallery = $(gallery);\n\t\t\t$gallery.addClass('justified-gallery');\n\n\t\t\tvar context = $gallery.data('jg.context');\n\t\t\tif (typeof context === 'undefined') {\n\n\t\t\t\tif (typeof arg !== 'undefined' && arg !== null && typeof arg !== 'object') \n\t\t\t\t\tthrow 'The argument must be an object';\n\n\t\t\t\t// Spinner init\n\t\t\t\tvar $spinner = $('<div class=\"spinner\"><span></span><span></span><span></span></div>');\n\n\t\t\t\t//Context init\n\t\t\t\tcontext = {\n\t\t\t\t\tsettings : $.extend({}, defaults, arg),\n\t\t\t\t\timgAnalyzerTimeout : null,\n\t\t\t\t\tentries : null,\n\t\t\t\t\tbuildingRow : {\n\t\t\t\t\t\tentriesBuff : [],\n\t\t\t\t\t\twidth : 0\n\t\t\t\t\t},\n\t\t\t\t\tlastAnalyzedIndex : -1,\n\t\t\t\t\tfirstRowFlushed : false,\n\t\t\t\t\tyield : {\n\t\t\t\t\t\tevery : 2, /* do a flush every context.yield.every flushes (\n\t\t\t\t\t\t\t\t\t\t\t\t* must be greater than 1, else the analyzeImages will loop */\n\t\t\t\t\t\tflushed : 0 //flushed rows without a yield\n\t\t\t\t\t},\n\t\t\t\t\toffY : 0,\n\t\t\t\t\tspinner : {\n\t\t\t\t\t\tactive : false,\n\t\t\t\t\t\tphase : 0,\n\t\t\t\t\t\ttimeslot : 150,\n\t\t\t\t\t\t$el : $spinner,\n\t\t\t\t\t\t$points : $spinner.find('span'),\n\t\t\t\t\t\tintervalId : null\n\t\t\t\t\t},\n\t\t\t\t\tcheckWidthIntervalId : null,\n\t\t\t\t\tgalleryWidth : $gallery.width(),\n\t\t\t\t\t$gallery : $gallery\n\t\t\t\t};\n\n\t\t\t\t$gallery.data('jg.context', context);\n\n\t\t\t} else if (arg === 'norewind') {\n\t\t\t\t// In this case we don't rewind, and analyze all the images\n\t\t\t} else {\n\t\t\t\tcontext.settings = $.extend({}, context.settings, arg);\n\t\t\t\trewind(context);\n\t\t\t}\n\t\t\t\n\t\t\tcheckSettings(context);\n\n\t\t\tcontext.entries = $gallery.find('> a, > div').toArray();\n\t\t\tif (context.entries.length === 0) return;\n\n\t\t\t// Randomize\n\t\t\tif (context.settings.randomize) {\n\t\t\t\tcontext.entries.sort(function () { return Math.random() * 2 - 1; });\n\t\t\t\t$.each(context.entries, function () {\n\t\t\t\t\t$(this).appendTo($gallery);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcontext.usedSizeRangeRegExp = new RegExp(\"(\" + \n\t\t\t\tcontext.settings.sizeRangeSuffixes.lt100 + \"|\" + \n\t\t\t\tcontext.settings.sizeRangeSuffixes.lt240 + \"|\" + \n\t\t\t\tcontext.settings.sizeRangeSuffixes.lt320 + \"|\" + \n\t\t\t\tcontext.settings.sizeRangeSuffixes.lt500 + \"|\" + \n\t\t\t\tcontext.settings.sizeRangeSuffixes.lt640 + \"|\" + \n\t\t\t\tcontext.settings.sizeRangeSuffixes.lt1024 + \")$\"\n\t\t\t);\n\n\t\t\tif (context.settings.maxRowHeight > 0 && context.settings.maxRowHeight < context.settings.rowHeight)\n\t\t\t\tcontext.settings.maxRowHeight = context.settings.rowHeight;\n\n\t\t\tvar imagesToLoad = false;\n\t\t\t$.each(context.entries, function (index, entry) {\n\t\t\t\tvar $entry = $(entry);\n\t\t\t\tvar $image = $entry.find('img');\n\n\t\t\t\tif ($image.data('jg.loaded') !== true) {\n\t\t\t\t\t$image.data('jg.loaded', false);\n\n\t\t\t\t\t//DEBUG// console.log('listed ' + $image.attr('alt'));\n\n\t\t\t\t\timagesToLoad = true;\n\n\t\t\t\t\t// Spinner start\n\t\t\t\t\tif (context.spinner.active === false) {\n\t\t\t\t\t\tcontext.spinner.active = true;\n\t\t\t\t\t\t$gallery.append(context.spinner.$el);\n\t\t\t\t\t\t$gallery.height(context.offY + context.spinner.$el.innerHeight());\n\t\t\t\t\t\tstartLoadingSpinnerAnimation(context.spinner);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Link Rel global overwrite\n\t\t\t\t\tif (context.settings.rel !== null) $entry.attr('rel', context.settings.rel);\n\n\t\t\t\t\t// Link Target global overwrite\n\t\t\t\t\tif (context.settings.target !== null) $entry.attr('target', context.settings.target);\n\n\t\t\t\t\t// Image src\n\t\t\t\t\tvar imageSrc = (typeof $image.data('safe-src') !== 'undefined') ? $image.data('safe-src') : $image.attr('src');\n\t\t\t\t\t$image.data('jg.originalSrc', imageSrc);\n\t\t\t\t\t$image.attr('src', imageSrc);\n\n\t\t\t\t\t/* Check if the image is loaded or not using another image object.\n\t\t\t\t\t\t\tWe cannot use the 'complete' image property, because some browsers, \n\t\t\t\t\t\t\twith a 404 set complete = true\n\t\t\t\t\t*/\n\t\t\t\t\tvar loadImg = new Image();\n\t\t\t\t\tvar $loadImg = $(loadImg);\n\t\t\t\t\t$loadImg.one('load', function imgLoaded () {\n\t\t\t\t\t\t//DEBUG// console.log('img load (alt: ' + $image.attr('alt') + ')');\n\t\t\t\t\t\t$image.off('load error');\n\t\t\t\t\t\t$image.data('jg.imgw', loadImg.width);\n\t\t\t\t\t\t$image.data('jg.imgh', loadImg.height);\n\t\t\t\t\t\t$image.data('jg.loaded', true);\n\t\t\t\t\t\tstartImgAnalyzer(context, false);\n\t\t\t\t\t});\n\t\t\t\t\t$loadImg.one('error', function imgLoadError () {\n\t\t\t\t\t\t//DEBUG// console.log('img error (alt: ' + $image.attr('alt') + ')');\n\t\t\t\t\t\t$image.off('load error');\n\t\t\t\t\t\t$image.data('jg.loaded', 'error');\n\t\t\t\t\t\tstartImgAnalyzer(context, false);\n\t\t\t\t\t});\n\t\t\t\t\tloadImg.src = imageSrc;\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tif (!imagesToLoad) startImgAnalyzer(context, false);\n\t\t\tcheckWidth(context);\n\t\t});\n\n\t};\n\t\n}(jQuery));"]}